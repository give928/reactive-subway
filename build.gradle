plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'nextstep'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// log
	implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'

	// jgraph
	implementation 'org.jgrapht:jgrapht-core:1.0.1'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// flyway
	implementation 'org.flywaydb:flyway-core'
	implementation "org.flywaydb:flyway-mysql"

	// r2dbc mysql
	implementation 'dev.miku:r2dbc-mysql:0.8.2.RELEASE'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// netty dns macos
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// reactor
	implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'io.projectreactor.tools:blockhound-junit-platform:1.0.6.RELEASE'

	// rest-assured
	testImplementation 'io.rest-assured:rest-assured'

	// r2dbc h2
	testRuntimeOnly 'io.r2dbc:r2dbc-h2'
}

test {
	useJUnitPlatform()
}

// https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#quickstart
jib {
	from {
		image = 'openjdk:8-jdk-alpine'
		platforms {
			platform {
				architecture = 'arm64'
				os = 'linux'
			}
		}
	}
	to {
		image = 'give928/reactive-subway'
		tags = ['0.0.1']
	}
	container {
		creationTime = 'USE_CURRENT_TIMESTAMP'
		jvmFlags = ['-Dspring.profiles.active=prod', '-Djava.security.egd=file:/dev/./urandom', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
		ports = ['8080']
	}
}
